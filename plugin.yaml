name: app-typescript-openapi-plugin
description: Plugin that applies the concept of contract first from an OpenAPI contract and generates all the necessary source code and infrastructure in CDK.
types:
  - app
inputs:
  - label: Defines the name of the API, also used to link generated codes and code references.
    type: text
    name: api_name
    default: api-name
    required: true
  - label: Import OpenAPI spec file?
    type: bool
    name: import_spec_file
    default: True
    required: true
  - label: Defines the path to the specification file that will be imported
    type: text
    name: import_spec_file_path
    required: true
    condition:
      variable: import_spec_file
      operator: ==
      value: True
  - label: Defines the name of the OpenAPI specification file located in the /spec directory.
    global: true
    type: text
    name: spec_file_name
    default: spec-file-name
    required: true
  - label: Sets the path, starting from the project root, of the generated OpenAPI lambda files.
    global: true
    type: text
    name: source_dir
    default: src
    required: false
  - label: Defines the use of custom Access-Control-Allow-Origin of endpoints
    type: text
    name: access_control_allow_origin
    default: "*"
    required: false
  - label: Defines the use of custom Access-Control-Allow-Headers of endpoints
    type: text
    name: access_control_allow_headers
    default: "*"
    required: false
  - label: Defines the use of custom Access-Control-Allow-Methods of endpoints
    type: text
    name: access_control_allow_methods
    default: "*"
    required: false
  - label: Defines the use of custom Access-Control-Allow-Credentials of endpoints
    type: text
    name: access_control_allow_credentials
    default: "*"
    required: false
  - label: Enable X-Ray to trace lambdas and API Gateway?
    type: bool
    name: enable_tracing
    default: True
    required: true
hooks:
  - type: edit
    trigger: before-render
    path: infra/lib/{{service_name}}-service-stack.ts
    changes:
      - search:
          string: "import { Construct } from 'constructs';"
          insert-after:
            snippet: snippets/typescript-openapi-service-import.txt
          when:
            not-exists: "import { StackSpotOpenApiServices } from '@stackspot/cdk-component-openapi-typescript'"
  - type: edit
    trigger: before-render
    path: infra/lib/{{service_name}}-service-stack.ts
    changes:
      - search:
          string: "super(scope, id, props);"
          insert-after:
            snippet: snippets/typescript-openapi-service-constructor.txt
          when:
            not-exists: new StackSpotOpenApiServices(this, 'StackSpotOpenApiServices'
  - type: edit
    trigger: before-render
    path: package.json
    changes:
      - search:
          string: "scripts"
          insert-after:
            snippet: snippets/package-json-scripts.txt
          when:
            not-exists: "source:setup:openapi"
  - type: run
    trigger: after-render
    mac:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    linux:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    windows:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    condition:
      variable: import_spec_file
      operator: ==
      value: True
  - type: run
    trigger: after-render
    mac:
      - npm run infra:install:openapi
      - npm run infra:format:fix
      - npm run infra:build:cdk
      - npm run source:setup:openapi
    linux:
      - npm run infra:install:openapi
      - npm run infra:format:fix
      - npm run infra:build:cdk
      - npm run source:setup:openapi
    windows:
      - npm.cmd run infra:install:openapi
      - npm.cmd run infra:format:fix
      - npm.cmd run infra:build:cdk
      - npm.cmd run source:setup:openapi

displayName: OpenAPI + API Gateway Plugin

category: Backend

compatibility:
  - OpenAPI 3.0
  - NodeJS 14.x
  - CDK 2.x

about: docs/about.md

usage: docs/usage.md

useCase: docs/useCase.md

implementation: docs/implementation.md

technologies:
  - Typescript
  - OpenAPI
  - API Gateway

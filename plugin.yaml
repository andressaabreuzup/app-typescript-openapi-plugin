name: app-typescript-openapi-plugin
description: Plugin que aplica o conceito de contract first a partir de um contrato OpenAPI e gera todo o código fonte e infraestrutura necessários em CDK.
types:
  - app
inputs:
  - label: Define o nome da API, também utilizado para fazer o link de códigos gerados e referências de código.
    type: text
    name: api_name
    default: api-name
    required: true
  - label: Importar arquivo de especificação OpenAPI?
    type: bool
    name: import_spec_file
    default: True
    required: true
  - label: Informe o caminho para o arquivo de especificação que será importado
    type: text
    name: import_spec_file_path
    required: true
    condition:
      variable: import_spec_file
      operator: ==
      value: True
  - label: Define o nome do arquivo de especificação OpenAPI localizado no diretório /spec, por padrão é spec-file-name.
    global: true
    type: text
    name: spec_file_name
    default: spec-file-name
    required: true
  - label: Define o caminho, a partir da raiz do projeto, dos arquivos OpenAPI lambda gerados, por padrão é src.
    global: true
    type: text
    name: source_dir
    default: src
    required: false
  - label: Define a utilização de Access-Control-Allow-Origin customizado dos endpoints. Por padrão é "*"
    type: text
    name: access_control_allow_origin
    default: "*"
    required: false
  - label: Define a utilização de Access-Control-Allow-Headers customizado dos endpoints. Por padrão é "*"
    type: text
    name: access_control_allow_headers
    default: "*"
    required: false
  - label: Define a utilização de Access-Control-Allow-Methods customizado dos endpoints. Por padrão é "*"
    type: text
    name: access_control_allow_methods
    default: "*"
    required: false
  - label: Define a utilização de Access-Control-Allow-Credentials customizado dos endpoints. Por padrão é "*"
    type: text
    name: access_control_allow_credentials
    default: "*"
    required: false
  - label: Deseja habilitar X-Ray para tracing das lambdas e API Gateway?
    type: bool
    name: enable_tracing
    default: True
    required: true
hooks:
  - type: edit
    trigger: before-render
    path: infra/lib/{{service_name}}-service-stack.ts
    changes:
      - search:
          string: "import { Construct } from 'constructs';"
          insert-after:
            snippet: snippets/typescript-openapi-service-import.txt
          when:
            not-exists: "import { StackSpotOpenApiServices } from '@stackspot/cdk-component-openapi-typescript'"
  - type: edit
    trigger: before-render
    path: infra/lib/{{service_name}}-service-stack.ts
    changes:
      - search:
          string: "super(scope, id, props);"
          insert-after:
            snippet: snippets/typescript-openapi-service-constructor.txt
          when:
            not-exists: new StackSpotOpenApiServices(this, 'StackSpotOpenApiServices'
  - type: edit
    trigger: before-render
    path: package.json
    changes:
      - search:
          string: "scripts"
          insert-after:
            snippet: snippets/package-json-scripts.txt
          when:
            not-exists: "source:setup:openapi"
  - type: run
    trigger: after-render
    mac:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    linux:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    windows:
      - rm ./infra/spec/{{spec_file_name}}.yaml
      - cp {{import_spec_file_path}} ./infra/spec/{{spec_file_name}}.yaml
    condition:
      variable: import_spec_file
      operator: ==
      value: True
  - type: run
    trigger: after-render
    mac:
      - npm run infra:install:openapi
      - npm run infra:format:fix
      - npm run infra:build:cdk
      - npm run source:setup:openapi
    linux:
      - npm run infra:install:openapi
      - npm run infra:format:fix
      - npm run infra:build:cdk
      - npm run source:setup:openapi
    windows:
      - npm.cmd run infra:install:openapi
      - npm.cmd run infra:format:fix
      - npm.cmd run infra:build:cdk
      - npm.cmd run source:setup:openapi

displayName: OpenAPI + API Gateway Plugin

category: Backend

compatibility:
  - OpenAPI 3.0
  - NodeJS 14.x
  - CDK 2.x

about: docs/about.md

usage: docs/usage.md

useCase: docs/useCase.md

implementation: docs/implementation.md

technologies:
  - Typescript
  - OpenAPI
  - API Gateway
